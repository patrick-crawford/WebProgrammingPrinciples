"use strict";(self.webpackChunkOERTemplate=self.webpackChunkOERTemplate||[]).push([[85],{6863:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"Objects-Built-ins/Strings","title":"Strings","description":"Strings","source":"@site/docs/Objects-Built-ins/Strings.md","sourceDirName":"Objects-Built-ins","slug":"/Objects-Built-ins/Strings","permalink":"/WebProgrammingPrinciples/Objects-Built-ins/Strings","draft":false,"unlisted":false,"editUrl":"https://github.com/catherine-leung/OERTemplate/tree/main/docs/Objects-Built-ins/Strings.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"Strings","title":"Strings","sidebar_position":2,"description":"Strings"},"sidebar":"courseNotesSidebar","previous":{"title":"Introduction","permalink":"/WebProgrammingPrinciples/Objects-Built-ins/Introduction"},"next":{"title":"Arrays","permalink":"/WebProgrammingPrinciples/Objects-Built-ins/Arrays"}}');var s=r(4848),i=r(8453);const l={id:"Strings",title:"Strings",sidebar_position:2,description:"Strings"},o="Strings",c={},a=[{value:"String Properties and Methods",id:"string-properties-and-methods",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"strings",children:"Strings"})}),"\n",(0,s.jsxs)(t.p,{children:["Here are a few examples of how you can declare a ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",children:(0,s.jsx)(t.code,{children:"String"})})," in JavaScript, first using a string literal, followed by a call to the ",(0,s.jsxs)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/new",children:[(0,s.jsx)(t.code,{children:"new"})," operator"]})," and the ",(0,s.jsx)(t.code,{children:"String"})," object's constructor function:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"/*\n * JavaScript String Literals\n */\nlet s = 'some text'; // single-quotes\nlet s1 = 'some text'; // double-quotes\nlet s2 = `some text`; // template literal using back-ticks\nlet unicode =\n  '\u4e2d\u6587 espa\xf1ol Deutsch English \u0926\u0947\u0935\u0928\u093e\u0917\u0930\u0940 \u0627\u0644\u0639\u0631\u0628\u064a\u0629 portugu\xeas \u09ac\u09be\u0982\u09b2\u09be \u0440\u0443\u0441\u0441\u043a\u0438\u0439 \u65e5\u672c\u8a9e \u0a2a\u0a70\u0a1c\u0a3e\u0a2c\u0a40 \ud55c\uad6d\uc5b4 \u0ba4\u0bae\u0bbf\u0bb4\u0bcd \u05e2\u05d1\u05e8\u05d9\u05ea'; // non-ASCII characters\n\n/*\n * JavaScript String Constructor: `new String()` creates a new instance of a String\n */\nlet s3 = new String('Some Text');\nlet s4 = new String('Some Text');\n"})}),"\n",(0,s.jsxs)(t.p,{children:["If we want to convert other types to a ",(0,s.jsx)(t.code,{children:"String"}),", we have a few options:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"let x = 17;\nlet s = '' + x; // concatenate with a string (the empty string)\nlet s2 = String(x); // convert to String. Note: the `new` operator is not used here\nlet s3 = x.toString(); // use a type's .toString() method\n"})}),"\n",(0,s.jsxs)(t.p,{children:["Whether you use a literal or the constructor function, in all cases you will be able to use\nthe various ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/prototype#Properties",children:"functionality"})," of the ",(0,s.jsxs)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",children:[(0,s.jsx)(t.code,{children:"String"})," type"]}),"."]}),"\n",(0,s.jsx)(t.h2,{id:"string-properties-and-methods",children:"String Properties and Methods"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/length",children:(0,s.jsx)(t.code,{children:"s.length"})})," - will tell us the length of the string (UTF-16 code units)"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charAt",children:(0,s.jsx)(t.code,{children:"s.charAt(1)"})})," - returns the character at the given position (UTF-16 code unit). We can also use ",(0,s.jsx)(t.code,{children:"s[1]"})," and use an index notation to get a particular character from the string."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/concat",children:(0,s.jsx)(t.code,{children:"s.concat()"})})," - returns a new string created by concatenating the original with the given arguments."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padStart",children:(0,s.jsx)(t.code,{children:"s.padStart(2, '0)"})})," - returns a new string padded with the given substring until the length meets the minimum length given. See also ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd",children:(0,s.jsx)(t.code,{children:"s.padEnd()"})}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes",children:(0,s.jsx)(t.code,{children:'s.includes("tex")'})})," - returns ",(0,s.jsx)(t.code,{children:"true"})," if the search string is found within the string, otherwise ",(0,s.jsx)(t.code,{children:"false"})," if not found."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith",children:(0,s.jsx)(t.code,{children:'s.startsWith("some")'})})," - returns ",(0,s.jsx)(t.code,{children:"true"})," if the string starts with the given substring, otherwise ",(0,s.jsx)(t.code,{children:"false"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith",children:(0,s.jsx)(t.code,{children:'s.endsWith("text")'})})," - returns ",(0,s.jsx)(t.code,{children:"true"})," if the string ends with the given substring, otherwise ",(0,s.jsx)(t.code,{children:"false"}),"."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/indexOf",children:(0,s.jsx)(t.code,{children:'s.indexOf("t")'})})," - returns the first index position of the given substring within ",(0,s.jsx)(t.code,{children:"s"}),", or ",(0,s.jsx)(t.code,{children:"-1"})," if the substring is not found within ",(0,s.jsx)(t.code,{children:"s"}),". See also ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/lastIndexOf",children:(0,s.jsx)(t.code,{children:"s.lastIndexOf()"})})]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/match",children:(0,s.jsx)(t.code,{children:"s.match(regex)"})})," - tries to match a regular expression against the string, returning the matches. See discussion of RegExp below."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace",children:(0,s.jsx)(t.code,{children:'s.replace(regex, "replacement")'})})," - returns a new string with the first occurrence of a matched RegExp replaced by the replacement text. See also ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replaceAll",children:(0,s.jsx)(t.code,{children:"s.replaceAll()"})}),", which replaces ",(0,s.jsx)(t.em,{children:"all"})," occurrences."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice",children:(0,s.jsx)(t.code,{children:"s.slice(2, 3)"})})," - returns a new string extracted (sliced) from within the original string. A beginning index and (optional) end index mark the position of the slice."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/split",children:(0,s.jsx)(t.code,{children:"s.split()"})})," - returns an Array (see discussion below) of substrings by splitting the original string based on the given separator (",(0,s.jsx)(t.code,{children:"String"})," or ",(0,s.jsx)(t.code,{children:"RegExp"}),")."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase",children:(0,s.jsx)(t.code,{children:"s.toLowerCase()"})})," - returns a new string with all characters converted to lower case."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase",children:(0,s.jsx)(t.code,{children:"s.toUpperCase()"})})," - returns a new string with all characters converted to upper case."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/trim",children:(0,s.jsx)(t.code,{children:"s.trim()"})})," - returns a new string with leading and trailing whitespace removed."]}),"\n"]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["JavaScript Version Note: modern JavaScript also supports ",(0,s.jsx)(t.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals",children:"template literals"}),", also sometimes called template ",(0,s.jsx)(t.em,{children:"strings"}),". Template literals use back-ticks instead of single- or double-quotes, and allow you to interpolate JavaScript expressions. For example:"]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-js",children:"let a = 1;\nlet s = 'The value is ' + 1 * 6;\n// Use ${...} to interpolate the value of an expression into a string\nlet templateVersion = `The value is ${1 * 6}`;\n"})})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>l,x:()=>o});var n=r(6540);const s={},i=n.createContext(s);function l(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:l(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);