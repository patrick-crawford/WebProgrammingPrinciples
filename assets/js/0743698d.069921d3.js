"use strict";(self.webpackChunkOERTemplate=self.webpackChunkOERTemplate||[]).push([[452],{8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>r});var l=t(6540);const s={},o=l.createContext(s);function i(e){const n=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),l.createElement(o.Provider,{value:n},e.children)}},9130:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>d});const l=JSON.parse('{"id":"Elements-Media/HTML-Elements","title":"HTML Elements","description":"HTML Elements","source":"@site/docs/Elements-Media/HTML-Elements.md","sourceDirName":"Elements-Media","slug":"/Elements-Media/HTML-Elements","permalink":"/WebProgrammingPrinciples/Elements-Media/HTML-Elements","draft":false,"unlisted":false,"editUrl":"https://github.com/catherine-leung/OERTemplate/tree/main/docs/Elements-Media/HTML-Elements.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"id":"HTML-Elements","title":"HTML Elements","sidebar_position":1,"description":"HTML Elements"},"sidebar":"courseNotesSidebar","previous":{"title":"Practical Examples","permalink":"/WebProgrammingPrinciples/HTML-Fundamentals/Practical-Examples"},"next":{"title":"Multimedia","permalink":"/WebProgrammingPrinciples/Elements-Media/Multimedia"}}');var s=t(4848),o=t(8453);const i={id:"HTML-Elements",title:"HTML Elements",sidebar_position:1,description:"HTML Elements"},r="HTML Elements",a={},d=[{value:"HTML Element Types: Block vs. Inline",id:"html-element-types-block-vs-inline",level:2},{value:"Empty Elements",id:"empty-elements",level:2},{value:"Grouping Elements",id:"grouping-elements",level:2},{value:"Tables",id:"tables",level:2},{value:"Suggested Readings",id:"suggested-readings",level:2}];function c(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"html-elements",children:"HTML Elements"})}),"\n",(0,s.jsx)(n.h2,{id:"html-element-types-block-vs-inline",children:"HTML Element Types: Block vs. Inline"}),"\n",(0,s.jsx)(n.p,{children:"Visual HTML elements are categorized into one of two groups:"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements",children:"Block-level elements"}),': create a "block" of content in a page, with an empty line before and after them. Block elements fill the width of their parent element. Block elements can contain other block elements, inline elements, or text.']}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Inline_elements",children:"Inline elements"}),': creates "inline" content, which is part of the containing block. Inline elements can contain other inline elements or text.']}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Consider the following HTML content:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<body>\n  <p>The <em>cow</em> jumped over the <b>moon</b>.</p>\n</body>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Here we have a ",(0,s.jsx)(n.code,{children:"<p>"})," paragraph element. Because it is a block-level element, this paragraph will\nfill its container (in this case the ",(0,s.jsx)(n.code,{children:"<body>"})," element). It will also have empty space added above and below it."]}),"\n",(0,s.jsxs)(n.p,{children:["Within this block, we also encounter a number of other inline elements. First, we have simple text.\nHowever, we also see the ",(0,s.jsx)(n.code,{children:"<em>"})," and ",(0,s.jsx)(n.code,{children:"<b>"})," elements being used. These will affect their content, but not\ncreate a new block; rather, they will continue to flow inline in their container (the ",(0,s.jsx)(n.code,{children:"<p>"})," element)."]}),"\n",(0,s.jsx)(n.h2,{id:"empty-elements",children:"Empty Elements"}),"\n",(0,s.jsxs)(n.p,{children:["Many of the elements we've seen so far begin with an opening tag, and end with a closing tag: ",(0,s.jsx)(n.code,{children:"<body></body>"}),".\nHowever, not all elements need to be closed. Some elements have no ",(0,s.jsx)(n.em,{children:"content"}),", and therefore don't need\nto have a closing tag. We call these ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Glossary/Empty_element",children:"empty elements"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["An example is the ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/br",children:(0,s.jsx)(n.code,{children:"<br>"})})," line break element.\nWe use a ",(0,s.jsx)(n.code,{children:"<br>"})," when we want to tell the browser to insert a newline (similar to using ",(0,s.jsx)(n.code,{children:"\\n"})," in C):"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<p>Knock, Knock<br />Who's there?</p>\n"})}),"\n",(0,s.jsxs)(n.p,{children:["Other examples of empty elements include ",(0,s.jsx)(n.code,{children:"<hr>"})," (for a horizontal line), ",(0,s.jsx)(n.code,{children:"<meta>"})," for including metadata\nin the ",(0,s.jsx)(n.code,{children:"<head>"}),", and ",(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Glossary/Empty_element",children:"a dozen others"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"grouping-elements",children:"Grouping Elements"}),"\n",(0,s.jsx)(n.p,{children:"Often we need to group elements in our page together. We have a number of pre-defined element container options for how to achieve this, depending on what kind of content we are creating, and where it is in the document."}),"\n",(0,s.jsxs)(n.p,{children:["Using this so-called semantic markup helps the browser and other tools (e.g., accessibility) determine important structural information about the document (see ",(0,s.jsx)(n.a,{href:"https://www.brucelawson.co.uk/2018/the-practical-value-of-semantic-html/",children:"this post"})," for a great discussion):"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/header",children:(0,s.jsx)(n.code,{children:"<header>"})})," - introductory material at the top of a"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/nav",children:(0,s.jsx)(n.code,{children:"<nav>"})})," - content related to navigation (a menu, index, links, etc)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/main",children:(0,s.jsx)(n.code,{children:"<main>"})})," - the main content of the document."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/article",children:(0,s.jsx)(n.code,{children:"<article>"})})," - a self-contained composition, such as a blog post, article, etc."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/section",children:(0,s.jsx)(n.code,{children:"<section>"})})," - a group of related elements in a document representing one section of a whole"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/footer",children:(0,s.jsx)(n.code,{children:"<footer>"})})," - end material (author, copyright, links)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Sometimes there is no appropriate semantic container element for our content, and we need something more generic.\nIn such cases we have two options:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/div",children:(0,s.jsx)(n.code,{children:"<div>"})})," - a generic block-level container"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/span",children:(0,s.jsx)(n.code,{children:"<span>"})})," - a generic inline container"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<div>\n  <p>\n    This is an example of a using a div element. It also includes this\n    <span><em>span</em> element</span>.\n  </p>\n  <p>\n    Later we'll use a div or span like this to target content in our page with JavaScript or CSS\n    styles.\n  </p>\n  <p></p>\n</div>\n"})}),"\n",(0,s.jsx)(n.h2,{id:"tables",children:"Tables"}),"\n",(0,s.jsx)(n.p,{children:"Sometimes our data is tabular in nature, and we need to present it in a grid. A number of elements are used to create them:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table",children:(0,s.jsx)(n.code,{children:"<table>"})})," - the root of a table in HTML"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/caption",children:(0,s.jsx)(n.code,{children:"<caption>"})})," - the optional title (or caption) of the table"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/thead",children:(0,s.jsx)(n.code,{children:"<thead>"})})," - row(s) at the top of the table (header row or rows)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tbody",children:(0,s.jsx)(n.code,{children:"<tbody>"})})," - rows that form the main body of the table (the table's content rows)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tfoot",children:(0,s.jsx)(n.code,{children:"<tfoot>"})})," - row(s) at the bottom of the table (footer row or rows)"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"We define rows and columns of data within the above using the following:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/tr",children:(0,s.jsx)(n.code,{children:"<tr>"})})," - a single row in a table"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td",children:(0,s.jsx)(n.code,{children:"<td>"})})," - a single cell (row/column intersection) that contains table data"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Element/th",children:(0,s.jsx)(n.code,{children:"<th>"})})," - a header (e.g., a title for a column)"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["We can use the ",(0,s.jsx)(n.code,{children:"rowspan"})," and ",(0,s.jsx)(n.code,{children:"colspan"})," attributes to extend table elements beyond their usual bounds,\nfor example: have an element span two columns (",(0,s.jsx)(n.code,{children:'colspan="2"'}),") or have a heading span 3 rows (",(0,s.jsx)(n.code,{children:'rowspan="3")'}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<table>\n  <caption>\n    Order Information\n  </caption>\n\n  <thead>\n    <tr>\n      <th>Quantity</th>\n      <th>Colour</th>\n      <th>Price (CAD)</th>\n    </tr>\n  </thead>\n\n  <tbody>\n    <tr>\n      <td>1</td>\n      <td>Red</td>\n      <td>$5.60</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>Blue</td>\n      <td>$3.00</td>\n    </tr>\n    <tr>\n      <td>8</td>\n      <td>Blue</td>\n      <td>$1.50</td>\n    </tr>\n  </tbody>\n\n  <tfoot>\n    <tr>\n      <th colspan="2">Total</th>\n      <th>$26.60</th>\n    </tr>\n  </tfoot>\n</table>\n'})}),"\n",(0,s.jsx)(n.h2,{id:"suggested-readings",children:"Suggested Readings"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Learn/HTML/Tables",children:"HTML Tables (MDN)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Images_in_HTML",children:"Images in HTML (MDN)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Learn/HTML/Multimedia_and_embedding/Video_and_audio_content",children:"Video and Audio Content (MDN)"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/HTML/Reference",children:"HTML Reference"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);