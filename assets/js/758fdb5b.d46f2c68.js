"use strict";(self.webpackChunkOERTemplate=self.webpackChunkOERTemplate||[]).push([[390],{826:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/inspect-css-a1f9860544324e8832fb4e5b6deb8ead.gif"},6010:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"CSS-Styling/Applied-CSS","title":"Applied CSS","description":"Applied CSS","source":"@site/docs/CSS-Styling/Applied-CSS.md","sourceDirName":"CSS-Styling","slug":"/CSS-Styling/Applied-CSS","permalink":"/WebProgrammingPrinciples/CSS-Styling/Applied-CSS","draft":false,"unlisted":false,"editUrl":"https://github.com/catherine-leung/OERTemplate/tree/main/docs/CSS-Styling/Applied-CSS.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"id":"Applied-CSS","title":"Applied CSS","sidebar_position":2,"description":"Applied CSS"},"sidebar":"courseNotesSidebar","previous":{"title":"Introduction to CSS & Syntax","permalink":"/WebProgrammingPrinciples/CSS-Styling/Introduction-CSS-Syntax"},"next":{"title":"TODO","permalink":"/WebProgrammingPrinciples/Box-Model-Layout/TODO"}}');var o=s(4848),t=s(8453);const r={id:"Applied-CSS",title:"Applied CSS",sidebar_position:2,description:"Applied CSS"},l="Applied CSS",a={},d=[{value:"Containers for Styling",id:"containers-for-styling",level:2},{value:"CSS Units",id:"css-units",level:2},{value:"CSS Colours (<code>color</code>)",id:"css-colours-color",level:2},{value:"CSS Properties and Values",id:"css-properties-and-values",level:2},{value:"Exploring CSS Properties and Values in the Dev Tools",id:"exploring-css-properties-and-values-in-the-dev-tools",level:2},{value:"CSS <code>text</code> Properties",id:"css-text-properties",level:2},{value:"<code>font</code> Properties",id:"font-properties",level:3},{value:"Web Fonts - <code>@font-face</code>",id:"web-fonts---font-face",level:3},{value:"<code>font-size</code> property",id:"font-size-property",level:3},{value:"Text Effects",id:"text-effects",level:3},{value:"<code>background</code> Properties",id:"background-properties",level:2},{value:"Styling Links",id:"styling-links",level:2},{value:"CSS and the DOM via JavaScript",id:"css-and-the-dom-via-javascript",level:2},{value:"Exercise: Using Third-Party CSS Libraries",id:"exercise-using-third-party-css-libraries",level:2},{value:"How to use Third-Party CSS",id:"how-to-use-third-party-css",level:3},{value:"Popular CSS Libraries",id:"popular-css-libraries",level:3}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"applied-css",children:"Applied CSS"})}),"\n",(0,o.jsx)(n.h2,{id:"containers-for-styling",children:"Containers for Styling"}),"\n",(0,o.jsxs)(n.p,{children:["We've discussed ",(0,o.jsx)(n.code,{children:"<div>"})," and ",(0,o.jsx)(n.code,{children:"<span>"})," in the past, but their purpose may not have been clear.\nWhy bother wrapping other elements in ",(0,o.jsx)(n.code,{children:"<div>...</div>"})," or ",(0,o.jsx)(n.code,{children:"<span>...</span>"})," when they don't\ndisplay any different?"]}),"\n",(0,o.jsx)(n.p,{children:"With CSS we can now start to take advantage of what they provide. If we think of them as\ncontainers which can be used to group styling, their purpose will become more clear."}),"\n",(0,o.jsxs)(n.p,{children:["A ",(0,o.jsx)(n.code,{children:"<div>"})," is a block level element, and ",(0,o.jsx)(n.code,{children:"<span>"})," an inline element. Depending on how we want\nto group and apply styling, we can use one or both. Consider the following:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<style>\n  .info-box {\n    border: solid green;\n  }\n\n  .info-box p {\n    font-family: Serif;\n  }\n\n  .info-box span {\n    font-weight: bold;\n  }\n\n  .info-box img {\n    width: 75px;\n    height: 75px;\n  }\n</style>\n\n<p>This paragraph won\'t have any special style applied. Neither will this <span>span</span>.</p>\n\n<div class="info-box">\n  <p><span>Name:</span> Thomas Lee</p>\n  <p><span>Age:</span> 23</p>\n  <img src="tlee.jpg" />\n</div>\n'})}),"\n",(0,o.jsx)(n.h2,{id:"css-units",children:"CSS Units"}),"\n",(0,o.jsx)(n.p,{children:"Many CSS values require units to be specified, for example, font sizes, widths, heights, etc.\nAt first you might think that we should specify things in pixels; however, browsers need to work\non such a wide variety of hardware and render to so many different displays (watches to billboards),\nwe need more options. It's also important to be able to specify sizes using relative units vs. fixed,\nfor layouts that need to adapt to changing conditions and still retain the correct proportions."}),"\n",(0,o.jsxs)(n.p,{children:["There is one exception, and that is for ",(0,o.jsx)(n.code,{children:"0"})," (i.e., zero), which never needs a unit (i.e., ",(0,o.jsx)(n.code,{children:"0px"})," is the\nsame as ",(0,o.jsx)(n.code,{children:"0%"}),", etc)."]}),"\n",(0,o.jsx)(n.p,{children:"The most common units we use in CSS are:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"1em = 12pt = 16px = 100%\n"})}),"\n",(0,o.jsx)(n.p,{children:"Let's look at each of these in turn:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"em"})," (the width of the capital letter ",(0,o.jsx)(n.code,{children:"M"}),") - a scalable unit that is used in web media, and is equal to the current ",(0,o.jsx)(n.code,{children:"font-size"}),". If the ",(0,o.jsx)(n.code,{children:"font-size"})," is ",(0,o.jsx)(n.code,{children:"12pt"}),", ",(0,o.jsx)(n.code,{children:"1em"})," is the same as ",(0,o.jsx)(n.code,{children:"12pt"}),". If the ",(0,o.jsx)(n.code,{children:"font-size"})," is changed, ",(0,o.jsx)(n.code,{children:"1em"})," changes to match. We can also use multiples: ",(0,o.jsx)(n.code,{children:"2em"})," is twice the ",(0,o.jsx)(n.code,{children:"font-size"}),", and ",(0,o.jsx)(n.code,{children:".5em"})," is half. Using ",(0,o.jsx)(n.code,{children:"em"})," for sizes is popular on the web, since things have to scale on mobile vs. desktop (i.e., fixed unit sizes don't work as the screen shrinks/expands)."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"pt"})," - a fixed-size ",(0,o.jsx)(n.em,{children:"Point"})," unit that comes from print media, where ",(0,o.jsx)(n.code,{children:"1pt"})," equals ",(0,o.jsx)(n.code,{children:"1/72"})," of an inch."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"px"})," - pixels are fixed size units for web media (screens), and ",(0,o.jsx)(n.code,{children:"1px"})," is equal to one dot on a computer display. We use ",(0,o.jsx)(n.code,{children:"px"}),' on the web when we need "pixel perfect" sizing (e.g., image sizes).']}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"%"})," - the percent unit is similar to ",(0,o.jsx)(n.code,{children:"em"})," in that it scales with the size of the display. ",(0,o.jsx)(n.code,{children:"100%"})," is the same as the current ",(0,o.jsx)(n.code,{children:"font-size"}),"."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"vw"}),", ",(0,o.jsx)(n.code,{children:"vh"})," - the viewport width and height units are percentages of the visible space in the viewport (the part of the page you can see, the window's width and height). ",(0,o.jsx)(n.code,{children:"1vw"})," is the same as ",(0,o.jsx)(n.code,{children:"1%"})," of the width of the viewport, and ",(0,o.jsx)(n.code,{children:"80vh"})," is the same as ",(0,o.jsx)(n.code,{children:"80%"})," of the visible height."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["You will also sometimes encounter other ways of measurement that use full words: ",(0,o.jsx)(n.code,{children:"xx-small, x-small, small, medium, large, x-large, xx-large, smaller, larger, thin, medium, thick"})]}),"\n",(0,o.jsx)(n.p,{children:"Here's an example that uses a number of the units mentioned above:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<style>\n  html,\n  body {\n    height: 100vh;\n  }\n\n  .box {\n    margin: 10px;\n    font-size: 2em;\n    height: 150px;\n    border: medium solid black;\n  }\n</style>\n<div class="box"></div>\n'})}),"\n",(0,o.jsxs)(n.h2,{id:"css-colours-color",children:["CSS Colours (",(0,o.jsx)(n.code,{children:"color"}),")"]}),"\n",(0,o.jsx)(n.p,{children:"CSS allows us to define colour values for many declarations. We do so by specifying\na colour using one of the following notations:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:["Hexadecimal Red, Green, Blue: written using 3 double-digit hex numbers, and starting with a ",(0,o.jsx)(n.code,{children:"#"})," sign. Each of the 3 pairs represents a value between 0 and 255 for Red, Green, and Blue: ",(0,o.jsx)(n.code,{children:"#000000"})," is pure Black and ",(0,o.jsx)(n.code,{children:"#ffffff"})," is pure White, and ",(0,o.jsx)(n.code,{children:"#ffd700"})," is Gold."]}),"\n",(0,o.jsxs)(n.li,{children:["RGB or RGBA notation: here the red, green, blue, and sometimes alpha (i.e., opacity) are defined in decimal notation: ",(0,o.jsx)(n.code,{children:"#ffffff"})," is the same as ",(0,o.jsx)(n.code,{children:"rgb(255, 255, 255)"})," and ",(0,o.jsx)(n.code,{children:"#ffd700"})," is the same as ",(0,o.jsx)(n.code,{children:"rgb(255, 215, 0)"}),". If we want to define how see-through the colour is (by default you can't see through a colour), we add an alpha value: ",(0,o.jsx)(n.code,{children:"rgba(0, 191, 0, 0.5)"})," means that the colour will be 50% see through."]}),"\n",(0,o.jsxs)(n.li,{children:["Named colours: some colours are so common that they have their own ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/color_value#Color_keywords",children:"name defined in the CSS standard"}),". For example: ",(0,o.jsx)(n.code,{children:"white"}),", ",(0,o.jsx)(n.code,{children:"black"}),", ",(0,o.jsx)(n.code,{children:"green"}),", ",(0,o.jsx)(n.code,{children:"red"}),", but also ",(0,o.jsx)(n.code,{children:"chocolate"}),", ",(0,o.jsx)(n.code,{children:"darkorange"}),", ",(0,o.jsx)(n.code,{children:"peru"}),", etc."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["The easiest way to understand this is using a ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Colors/Color_picker_tool",children:"Colour Picker tool"}),", which lets you visually see the difference in changing values."]}),"\n",(0,o.jsx)(n.h2,{id:"css-properties-and-values",children:"CSS Properties and Values"}),"\n",(0,o.jsxs)(n.p,{children:["A ",(0,o.jsx)(n.em,{children:"property"})," is assigned to a selector in order to manipulate its style. The ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Reference",children:"CSS properties"})," are defined as part of the CSS standard.\nWhen you want to know how one of them works, or which values you can assign, you can look at the documentation\non MDN. For example:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/text-indent",children:(0,o.jsx)(n.code,{children:"text-indent"})})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/color",children:(0,o.jsx)(n.code,{children:"color"})})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/background-color",children:(0,o.jsx)(n.code,{children:"background-color"})})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/border",children:(0,o.jsx)(n.code,{children:"border"})})}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"There are hundreds of properties we can tweak as web developers, and it's a good idea to explore\nwhat's available, and to look at how other web sites use them via the developer tools."}),"\n",(0,o.jsx)(n.p,{children:"A property can have one or more values. A the possible values a property can have also comes\nfrom the standard. For example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"p {\n  text-decoration: underline;\n}\n\n.spelling-error {\n  text-decoration: red wavy underline;\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["The ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/text-decoration",children:(0,o.jsx)(n.code,{children:"text-decoration"})})," property is defined\nto take one of a number of values, each of which is also defined in the standard."]}),"\n",(0,o.jsx)(n.h2,{id:"exploring-css-properties-and-values-in-the-dev-tools",children:"Exploring CSS Properties and Values in the Dev Tools"}),"\n",(0,o.jsx)(n.p,{children:"By far the best way to learn about CSS is to look at how other sites use it. When you find\nsomething on the web that you think looks interesting, open your browser's dev tools and inspect\nthe CSS Styles:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"Inspect CSS styles",src:s(826).A+"",width:"1186",height:"882"})}),"\n",(0,o.jsxs)(n.p,{children:["You can look at the specific properties specified for an element, or see all the ",(0,o.jsx)(n.em,{children:"computed"})," styles\n(i.e., everything, including all default values). You can also try toggling these on and off, or\ndouble-click the values to enter your own."]}),"\n",(0,o.jsxs)(n.h2,{id:"css-text-properties",children:["CSS ",(0,o.jsx)(n.code,{children:"text"})," Properties"]}),"\n",(0,o.jsxs)(n.p,{children:["There are ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Fundamentals",children:"dozens of properties that affect how text is rendered"}),". These include\nthings like the color, spacing, margins, font characteristics, etc."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"h2 {\n  color: red;\n  text-align: center;\n  text-decoration: underline;\n  text-transform: uppercase;\n}\n\np {\n  color: #0000ff;\n  text-indent: 100px;\n}\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"font-properties",children:[(0,o.jsx)(n.code,{children:"font"})," Properties"]}),"\n",(0,o.jsxs)(n.p,{children:["We can use the ",(0,o.jsx)(n.code,{children:"font-family"})," property to specify a font, or list of fonts, for the\nbrowser to apply to an element. The font must be available on the user's computer,\notherwise the next font in the list will be tried until one is found that is installed,\nor a default font will be used."]}),"\n",(0,o.jsx)(n.p,{children:"In general it is safe to assume that the following fonts are available:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"Helvetica, Arial, Verdana, sans-serif"})," - sans-serif fonts"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:'"Courier New", Courier, monospace'})," - monospace fonts"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:'Georgia, "Times New Roman", Times, serif'})," - serif fonts"]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["You can see a ",(0,o.jsx)(n.a,{href:"https://www.cssfontstack.com/",children:"list of the fonts, and OS support here"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"h3 {\n  font-family: Arial;\n}\n\nh4 {\n  font-family: 'Times New Roman', Times, serif;\n}\n\nh5 {\n  font-size: 18pt;\n  font-style: italic;\n  font-weight: 500;\n}\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"web-fonts---font-face",children:["Web Fonts - ",(0,o.jsx)(n.code,{children:"@font-face"})]}),"\n",(0,o.jsxs)(n.p,{children:["Modern browsers also allow ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Learn/CSS/Styling_text/Web_fonts#Web_fonts",children:"custom fonts to be included"})," as external files, and downloaded\nas needed by the web site. This is often the preferred method for designers, who don't\nwant to be limited to the set of fonts available on ",(0,o.jsx)(n.em,{children:"all"})," operating systems."]}),"\n",(0,o.jsxs)(n.p,{children:["A font is a file that describes the curves and lines needed to generate characters at\ndifferent scales. There are various formats, from ",(0,o.jsx)(n.code,{children:"OTF"})," (OpenType Format) to\n",(0,o.jsx)(n.code,{children:"TTF"})," (TrueType Format) to ",(0,o.jsx)(n.code,{children:"WOFF"})," (Web Open Font Format), etc. In order for\nthe browser to use a new font, it has to be downloadable via one or more URLs.\nWe then tell the browser which font files to download in our CSS via the\n",(0,o.jsx)(n.code,{children:"@font-face"})," property:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"@font-face {\n    font-family: \"FontName\"\n    src: url(font.woff2) format('woff2'),\n         url(font.ttf) format('truetype');\n}\n\nbody {\n    font-family: \"FontName\";\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Many fonts have to be purchased, but there are some good sources of high quality,\nfreely available fonts for your sites:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.fontsquirrel.com/",children:"Font Squirrel"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://www.dafont.com/",children:"dafont.com"})}),"\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://fonts.google.com/",children:"Google Fonts"})}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["For example, we can use the popular ",(0,o.jsx)(n.a,{href:"https://fonts.google.com/specimen/Lobster",children:(0,o.jsx)(n.code,{children:'"Lobster"'})})," font\nfrom Google by doing the following in our CSS:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"@import url(https://fonts.googleapis.com/css?family=Lobster) p {\n  font-family: 'Lobster';\n}\n"})}),"\n",(0,o.jsxs)(n.h3,{id:"font-size-property",children:[(0,o.jsx)(n.code,{children:"font-size"})," property"]}),"\n",(0,o.jsxs)(n.p,{children:["Using the ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/font-size",children:(0,o.jsx)(n.code,{children:"font-size"})})," property, font sizes\ncan be given in fixed or relative units, depending on how we want our text to scale on different devices:"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"h1 {\n  font-size: 250%; /* scaled to 250% of regular font size */\n}\n\np {\n  font-size: 20pt; /* size in points -- 20/72 of an inch */\n}\n\n.quote {\n  font-size: smaller; /* smaller than normal size */\n}\n\n.bigger {\n  font-size: 1.5em; /* 1.5 times larger than the 'M' in normal font size */\n}\n"})}),"\n",(0,o.jsx)(n.h3,{id:"text-effects",children:"Text Effects"}),"\n",(0,o.jsx)(n.p,{children:"There are numerous effects that can be added to text (or any element), many beyond\nthe scope of this initial exploration of CSS. Here are a few simple examples to\ngive you an idea"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/text-shadow",children:(0,o.jsx)(n.code,{children:"text-shadow"})})," allows a\nshadow to be added to text, giving it a 3-D style appearance. The value includes a colour,\n",(0,o.jsx)(n.code,{children:"x"})," and ",(0,o.jsx)(n.code,{children:"y"})," offsets that determine the distance of the shadow from the text. Finally, we\ncan also add a ",(0,o.jsx)(n.code,{children:"blur-radius"}),", indicating how much to blur the shadow."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:".shadow-text {\n  text-shadow: 1px 1px 2px pink;\n}\n"})}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/text-overflow",children:(0,o.jsx)(n.code,{children:"text-overflow"})})," can be used\nto determine what the browser should do when the amount of text exceeds the available space\nin a container (e.g. in a ",(0,o.jsx)(n.code,{children:"<div>"})," or ",(0,o.jsx)(n.code,{children:"<p>"})," that isn't wide enough). For example, we can specify\nthat we want to ",(0,o.jsx)(n.code,{children:"clip"})," the contents and not show any more, or we can automatically display ",(0,o.jsx)(n.code,{children:"..."}),",\nthe ",(0,o.jsx)(n.code,{children:"ellipsis"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:'<style>\n  .movie-title {\n    text-overflow: ellipsis;\n  }\n</style>\n<span class="movie-title">Pirates of the Caribbean: The Curse of the Black Perl</span>\n'})}),"\n",(0,o.jsxs)(n.h2,{id:"background-properties",children:[(0,o.jsx)(n.code,{children:"background"})," Properties"]}),"\n",(0,o.jsxs)(n.p,{children:["Every element has a background that we can modify. We might, for example, want to\nspecify that the background be a certain colour; or we might want to use an image,\nor even tile an image multiple times (like wallpaper to create a pattern); or we\nmight want to create a gradient, from one colour to another. All of these options\nand more are possible using the ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/background",children:(0,o.jsx)(n.code,{children:"background"})}),"\nproperty."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"div.error {\n  background: red;\n}\n\ndiv.wallpaper {\n  background: url('pattern.jpg') repeat;\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"styling-links",children:"Styling Links"}),"\n",(0,o.jsxs)(n.p,{children:["We can control the way that links (i.e., ",(0,o.jsx)(n.code,{children:"<a>"}),") appear in our document. By default\nthey will have a solid blue underline, and when visited, a purple solid underline.\nIf you want to remove the underline, or change it's colour to match the theme of a page,\nwe can do that using CSS ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Pseudo-classes",children:(0,o.jsx)(n.code,{children:"pseudo-classes"})}),"."]}),"\n",(0,o.jsxs)(n.p,{children:["With ",(0,o.jsx)(n.em,{children:"pseudo-classes"})," we can specify certain states for the elements in our selector,\nfor example:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"a:link"})," - a normal, unvisited link (normally blue underline)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"a:visited"})," - a link the user has visited previously (normally purple underline)"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"a:hover"})," - a link when hovered with the mouse"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"a:active"})," - a link when it is clicked (i.e., while the mouse button is pressed)"]}),"\n"]}),"\n",(0,o.jsxs)(n.blockquote,{children:["\n",(0,o.jsx)(n.p,{children:"NOTE: pseudo-classes can be used with any element, but we mention them here in relation\nto styling links, since we often need them to deal with different states for a link."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Let's alter our links so that they use blue text, with no underline. However, when hovered,\nadd back the underline:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-css",children:"a:link,\na:visited {\n  text-decoration: none;\n}\n\na:hover,\na:active {\n  text-decoration: underline;\n}\n"})}),"\n",(0,o.jsx)(n.h2,{id:"css-and-the-dom-via-javascript",children:"CSS and the DOM via JavaScript"}),"\n",(0,o.jsxs)(n.p,{children:["We've been discussing CSS in the context of HTML, but we also need to explore how to\nwork with it via JavaScript. The DOM provides us a ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/CSS_Object_Model/Using_dynamic_styling_information",children:"number of methods"}),"\nfor examining and changing the CSS styles associated with elements."]}),"\n",(0,o.jsxs)(n.p,{children:["First, we can use a DOM element's ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/style",children:(0,o.jsx)(n.code,{children:"style"})})," property.\nDoing so gives us access to the inline ",(0,o.jsx)(n.code,{children:"style"})," attribute of the element.\nWe can get or set particular CSS property values via the ",(0,o.jsx)(n.code,{children:"style"})," element using ",(0,o.jsx)(n.em,{children:"camelCase"})," versions\nof the CSS property names. For example, ",(0,o.jsx)(n.code,{children:"background-color"})," becomes ",(0,o.jsx)(n.code,{children:"backgroundColor"}),", while ",(0,o.jsx)(n.code,{children:"width"})," remains ",(0,o.jsx)(n.code,{children:"width"}),"."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-js",children:"// Change the background colour of all paragraphs to red\nvar elems = document.querySelectorAll('p');\nfor (var i = 0, len = elems.length; i < len; i++) {\n  elems[i].style.backgroundColor = 'red';\n}\n"})}),"\n",(0,o.jsx)(n.p,{children:"Usually we don't need (or want) to alter properties one by one via the DOM. Instead,\nit's more common to add or remove classes to elements, which pre-define a set of properties."}),"\n",(0,o.jsxs)(n.p,{children:["Similar to an element's ",(0,o.jsx)(n.code,{children:"style"})," property, we can also use its ",(0,o.jsx)(n.code,{children:"classList"})," property. It has\na number of useful ",(0,o.jsx)(n.a,{href:"https://developer.mozilla.org/en-US/docs/Web/API/Element/classList#Methods",children:"methods"}),":"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"add()"})," - adds one (or more) class names to the element. If any of them are already present, they are ignored."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"remove()"})," - removes one (or more) class names from the element."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"toggle()"})," - toggles a class name on (adds it) or off (removes it), depending on the current state."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"contains()"})," - checks if the specified class name is already defined for this element."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.code,{children:"replace()"})," - replaces an old class name with the new one."]}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Using classes and ",(0,o.jsx)(n.code,{children:"classList"}),", it's possible for us to define various states for our UI\nby creating multiple classes, and then add/remove them at runtime as the program runs\nand data changes."]}),"\n",(0,o.jsx)(n.p,{children:"Imagine you were creating a media player, and needed to show lists of songs and videos.\nSome of the media has been played by the user, and some is new. We can define classes\nfor both, and then use JavaScript to apply the correct class to each:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-html",children:"<style>\n  .media-played {\n    background: gray;\n  }\n\n  .media-new {\n    border: dashed red;\n  }\n</style>\n...\n<script>\n  // Loop through an array of media objects, and set the class for each one\n  mediaItems.forEach(function (media) {\n    var mediaElem = document.getElementById(media.id);\n    if (media.played) {\n      mediaElem.add('media-played');\n    } else {\n      mediaElem.add('media-new');\n    }\n  });\n\n  // When the user plays one of the media items, change it's display\n  function mediaPlayed(media) {\n    var mediaElem = document.getElementById(media.id);\n    mediaElem.replace('media-new', 'media-played');\n  }\n<\/script>\n"})}),"\n",(0,o.jsx)(n.h2,{id:"exercise-using-third-party-css-libraries",children:"Exercise: Using Third-Party CSS Libraries"}),"\n",(0,o.jsx)(n.p,{children:"We've been focused on the mechanics of writing CSS ourselves, and this is an\nimportant skill. In addition, it's a good idea to know how to use third-party\nCSS libraries created by other developers. There are many pre-existing CSS\nlibraries and frameworks we can use to help us create the web pages and apps\nwe desire."}),"\n",(0,o.jsx)(n.h3,{id:"how-to-use-third-party-css",children:"How to use Third-Party CSS"}),"\n",(0,o.jsx)(n.p,{children:"There is a general pattern to using any CSS library in your web page."}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Find a library you want to use. We've listed a number of interesting ones below."}),"\n",(0,o.jsx)(n.li,{children:'Read the documentation. Every library is different, and the "installation" and "usage" instructions will usually guide you on next steps. Get used to reading technical documentation, so that you can learn to solve your own problems.'}),"\n",(0,o.jsxs)(n.li,{children:["Figure out which file or files you need to include in your HTML. This will typically include one or more ",(0,o.jsx)(n.code,{children:".css"})," files, and maybe ",(0,o.jsx)(n.code,{children:".js"})," ,fonts, etc. You will likely need to use ",(0,o.jsx)(n.code,{children:"<link>"})," and ",(0,o.jsx)(n.code,{children:"<script>"})," elements"]}),"\n",(0,o.jsxs)(n.li,{children:["See if the CSS library you want to use is available via a ",(0,o.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Content_delivery_network",children:"Content Delivery Network (CDN)"}),". Try searching for your chosen library on ",(0,o.jsx)(n.a,{href:"https://cdnjs.com/",children:"cdnjs"})," or another CDN."]}),"\n",(0,o.jsx)(n.li,{children:"Read the docs for your library to see if you need to include any special markup, classes, or other info in your HTML file in order for things to work. CSS libraries operate on HTML, and sometimes they will expect it to be in a particular format."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"popular-css-libraries",children:"Popular CSS Libraries"}),"\n",(0,o.jsx)(n.p,{children:"Here's a list of some popular CSS libraries and frameworks to get you started."}),"\n",(0,o.jsx)(n.p,{children:'First, a few examples of simple "drop in" style libraries, where you simply include\nthe CSS file, and everything "Just Works":'}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"http://necolas.github.io/normalize.css/",children:"Normalize.css"})," - normalizes CSS so it is the same in all browsers (",(0,o.jsx)(n.a,{href:"https://cdnjs.com/libraries/normalize",children:"CDN link"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://milligram.io/",children:"Milligram"})," - tiny set of default styles to make your site look great (",(0,o.jsx)(n.a,{href:"https://cdnjs.com/libraries/milligram",children:"CDN link"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://yegor256.github.io/tacit/",children:"Tacit"})," - CSS framework with no classes."]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Next, there are lots of stylesheets you can use to improve the readability of your text:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://edwardtufte.github.io/tufte-css/",children:"TufteCSS"})," - a stylesheet based on the ideas of Edward Tufte about typography and text (",(0,o.jsx)(n.a,{href:"https://cdnjs.com/libraries/tufte-css",children:"CDN link"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/BafS/Gutenberg",children:"Gutenberg"})," - a drop-in stylesheet for Printing to a printer"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://fontawesome.com/",children:"Font Awesome"})," - beautiful fonts and icons"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"In addition to changing how our text looks, a lot of CSS libraries add interesting\nand playful animations and effects to spice up our HTML:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"http://ianlunn.github.io/Hover/",children:"Hover"})," - hover effects for links, buttons, and logs"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"http://kazzkiq.github.io/balloon.css/",children:"Balloon.css"})," - tooltips and popups"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"http://daneden.github.io/animate.css",children:"Animate.css"})," - animations for HTML elements"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"http://elrumordelaluz.github.io/csshake/",children:"CSShake"})," - more animations for HTML elements (",(0,o.jsx)(n.a,{href:"https://cdnjs.com/libraries/csshake",children:"CDN link"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://una.im/CSSgram/",children:"CSSgram"})," - Instagram style filters for HTML images"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"Another common problem CSS can solve is what to do while we wait for things to finish\nloading:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"http://tobiasahlin.com/spinkit/",children:"SpinKit"})," - loading animations (",(0,o.jsx)(n.a,{href:"https://cdnjs.com/libraries/spinkit",children:"CDN link"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"http://www.raphaelfabeni.com.br/css-loader/",children:"CSS Loader"})," - more loading animations (",(0,o.jsx)(n.a,{href:"https://cdnjs.com/libraries/css-loader",children:"CDN link"}),")"]}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:'Many CSS libraries have grown into more complex suites of layout, component, typography,\nnavigation, and other solutions. We often refer to these as "frameworks" to indicate the\nexpanded scope. There are many to choose from, including:'}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://purecss.io/",children:"Pure.css"})," - tiny CSS framework for responsive layouts, buttons, forms, menus, etc."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://www.getpapercss.com/",children:"PaperCSS"})," - playful, hand-drawn style UI kit"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"http://getbootstrap.com/",children:"Bootstrap"})," - one of the most popular UI grid and component system for mobile and desktop web. Lots of themed versions of this too, for example ",(0,o.jsx)(n.a,{href:"http://daemonite.github.io/material/",children:"Material UI"})]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://getuikit.com/",children:"UIKit"})," - lightweight toolkit for building web app front-ends"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://semantic-ui.com/",children:"Semantic UI"})," - UI framework, lots of responsive components (",(0,o.jsx)(n.a,{href:"https://cdnjs.com/libraries/semantic-ui",children:"CDN link"}),")"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://tailwindcss.com",children:"Tailwind CSS"})," - is a utility-first CSS framework for rapidly building modern websites without ever leaving your HTML."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>l});var i=s(6540);const o={},t=i.createContext(o);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);